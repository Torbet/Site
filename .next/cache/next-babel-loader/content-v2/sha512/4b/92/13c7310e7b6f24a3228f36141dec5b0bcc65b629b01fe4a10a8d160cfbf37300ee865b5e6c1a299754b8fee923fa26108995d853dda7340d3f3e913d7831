{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/guy/Development/Web/Site/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/guy/Development/Web/Site/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/guy/Development/Web/Site/components/repos.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport styles from '../styles/repos.module.css';\n\nfunction createData(Title, Description, Language, url) {\n  return {\n    Title: Title,\n    Description: Description,\n    Language: Language,\n    url: url\n  };\n}\n\nexport default function Repos(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      arrayItems = _useState[0],\n      setArrayItems = _useState[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://api.github.com/users/torbet/repos').then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              var items = data.map(function (arraySingleItem) {\n                return createData(arraySingleItem.name, arraySingleItem.description, arraySingleItem.language, arraySingleItem.html_url);\n              });\n              setArrayItems(items);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: arrayItems.map(function (row) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.row,\n          onClick: function onClick() {\n            router.push(row.url);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.title,\n            children: row.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.subTitle,\n            children: row.Description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.subTitle,\n            children: row.Language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, _this)]\n        }, row.Title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Repos, \"QXBFUJGXV+7xxwkILOSQRSK9ul4=\", false, function () {\n  return [useRouter];\n});\n\n_c = Repos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repos\");","map":{"version":3,"sources":["/Users/guy/Development/Web/Site/components/repos.jsx"],"names":["useState","useEffect","useRouter","styles","createData","Title","Description","Language","url","Repos","props","arrayItems","setArrayItems","fetch","then","response","json","data","items","map","arraySingleItem","name","description","language","html_url","router","container","row","push","title","subTitle"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,WAA3B,EAAwCC,QAAxC,EAAkDC,GAAlD,EAAuD;AACnD,SAAO;AAAEH,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,WAAW,EAAXA,WAAT;AAAsBC,IAAAA,QAAQ,EAARA,QAAtB;AAAgCC,IAAAA,GAAG,EAAHA;AAAhC,GAAP;AACH;;AAED,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA;;AAAA,kBACGV,QAAQ,CAAC,EAAD,CADX;AAAA,MAC1BW,UAD0B;AAAA,MACdC,aADc;;AAEjCX,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACAY,KAAK,CAAC,2CAAD,CAAL,CAAmDC,IAAnD,CAAwD,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,aAAhE,EACDF,IADC,CACI,UAAAG,IAAI,EAAI;AACV,kBAAMC,KAAK,GAAGD,IAAI,CAACE,GAAL,CAAS,UAACC,eAAD,EAAqB;AACxC,uBACIhB,UAAU,CAACgB,eAAe,CAACC,IAAjB,EAAuBD,eAAe,CAACE,WAAvC,EAAoDF,eAAe,CAACG,QAApE,EAA8EH,eAAe,CAACI,QAA9F,CADd;AAGH,eAJa,CAAd;AAKAZ,cAAAA,aAAa,CAACM,KAAD,CAAb;AACH,aARC,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAWN,EAXM,CAAT;AAaA,MAAMO,MAAM,GAAGvB,SAAS,EAAxB;AAIA,sBACI;AAAK,IAAA,EAAE,EAAEC,MAAM,CAACuB,SAAhB;AAAA,2BACI;AAAA,gBACKf,UAAU,CAACQ,GAAX,CAAe,UAACQ,GAAD;AAAA,4BACR;AAAI,UAAA,SAAS,EAAExB,MAAM,CAACwB,GAAtB;AAA2B,UAAA,OAAO,EAAE,mBAAM;AAAEF,YAAAA,MAAM,CAACG,IAAP,CAAYD,GAAG,CAACnB,GAAhB;AAAsB,WAAlE;AAAA,kCACI;AAAI,YAAA,SAAS,EAAEL,MAAM,CAAC0B,KAAtB;AAAA,sBAA8BF,GAAG,CAACtB;AAAlC;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAI,YAAA,SAAS,EAAEF,MAAM,CAAC2B,QAAtB;AAAA,sBAAiCH,GAAG,CAACrB;AAArC;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAI,YAAA,SAAS,EAAEH,MAAM,CAAC2B,QAAtB;AAAA,sBAAiCH,GAAG,CAACpB;AAArC;AAAA;AAAA;AAAA;AAAA,mBAHJ;AAAA,WAAyEoB,GAAG,CAACtB,KAA7E;AAAA;AAAA;AAAA;AAAA,iBADQ;AAAA,OAAf;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAnCuBI,K;UAeLP,S;;;KAfKO,K","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\n\nimport styles from '../styles/repos.module.css'\n\nfunction createData(Title, Description, Language, url) {\n    return { Title, Description, Language, url };\n}\n\nexport default function Repos(props) {\n    const [arrayItems, setArrayItems] = useState([])\n    useEffect(async () => {\n        await fetch('https://api.github.com/users/torbet/repos').then(response => response.json())\n            .then(data => {\n                const items = data.map((arraySingleItem) => {\n                    return (\n                        createData(arraySingleItem.name, arraySingleItem.description, arraySingleItem.language, arraySingleItem.html_url)\n                    );\n                });\n                setArrayItems(items);\n            })\n\n    }, [])\n\n    const router = useRouter()\n\n\n\n    return (\n        <div id={styles.container}>\n            <ul>\n                {arrayItems.map((row) => (\n                        <li className={styles.row} onClick={() => { router.push(row.url) }} key={row.Title}>\n                            <h2 className={styles.title}>{row.Title}</h2>\n                            <h3 className={styles.subTitle}>{row.Description}</h3>\n                            <h3 className={styles.subTitle}>{row.Language}</h3>\n                        </li>\n                ))}\n            </ul>\n\n\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}